version: "3.9"

services:
  pythonapp:
    container_name: pythonapp
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://postgres:postgres@db-ipm:5432/postgres
    ports:
      - "8000:8000"
    depends_on:
      - db-ipm
    volumes:
      - ./app/images:/app/images
    networks:
      - mynetwork

  db-ipm:
    container_name: db-ipm
    image: postgres:12
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_SKIP_CSRF_CHECK: "1"
    ports:
      - "5050:80"
    depends_on:
      - db-ipm
    networks:
      - mynetwork

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ":9001"
    networks:
      - mynetwork
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: admincom
      MINIO_ROOT_PASSWORD: admin01101998
    ports:
      - "9000:9000"
      - "9001:9001"
    labels:
      - "mynetwork.enable=true"
      - "mynetwork.http.routers.minio_s3.rule=Host(`s3.ipm.com.br`)"
      - "mynetwork.http.routers.minio_s3.tls.certresolver=le"
      - "mynetwork.http.routers.minio_s3.entrypoints=websecure"
      - "mynetwork.http.routers.minio_s3.tls=true"
      - "mynetwork.http.services.minio_s3.loadbalancer.server.port=9000"
      - "mynetwork.http.routers.minio_console.rule=Host(`console.ipm.com.br`)"
      - "mynetwork.http.routers.minio_console.tls.certresolver=le"
      - "traefik.http.routers.minio_console.entrypoints=websecure"
      - "mynetwork.http.routers.minio_console.tls=true"
      - "mynetwork.http.services.minio_console.loadbalancer.server.port=9001"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - "node.role==manager"
      resources:
        limits:
          cpus: "0.2"
          memory: 512M

volumes:
  pgdata:
    driver: local
  minio_data:
    driver: local

networks:
  mynetwork:
    driver: bridge
